name: Deploy to Render

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # test backend (with mock environment)
      - name: Test Backend
        env:
          DATABASE_URL: jdbc:h2:mem:testdb
          DATABASE_USERNAME: sa
          DATABASE_PASSWORD: 
          SPRING_PROFILES_ACTIVE: test
        run: |
          cd backend
          chmod +x mvnw
          ./mvnw test

      # test frontend
      - name: Test Frontend
        env:
          VITE_BACKEND_URL: http://localhost:8082/api/v1
          VITE_SUPABASE_URL: https://mock.supabase.co
          VITE_SUPABASE_ANON_KEY: mock-key
          VITE_SUPABASE_PROJECT_ID: mock-id
          VITE_SUPABASE_PROJECT_BUCKET: mock-bucket
        run: |
          cd frontend
          npm ci
          npm run test

      # test recommendation service
      - name: Test Recommendation Service
        env:
          SERVICE_TOKEN: test-token
          MODEL_PATH: models/clustering_model.pkl
          FLASK_ENV: testing
        run: |
          cd recommendation
          pip install -r requirements.txt
          python -m pytest tests/ || echo "No tests found"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Trigger Render Deployment
        run: |
          echo "âœ… Tests passed! Render will auto-deploy from main branch"
          # Optional: You can add webhook calls here if you set up deploy hooks
          # curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}