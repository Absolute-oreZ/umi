spring:
  main:
    lazy-initialization: true
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres?prepareThreshold=0}
    driver-class-name: org.postgresql.Driver
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        statement_cache:
          size: 0
        boot:
          allow_jdbc_metadata_access: false
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

application:
  file:
    upload:
      photos-output-path: /tmp/uploads
  bot:
    id: ce8016e7-6405-41d6-979a-4617d8085c03
    username: UMI-BOT
  ml-recommendation:
    base-url: ${ML_RECOMMENDATION_URL}
    service-token: ${ML_SERVICE_TOKEN}
  gemini-ai:
    base-url: https://generativelanguage.googleapis.com
    model: gemini-2.0-flash
    api-key: ${GEMINI_API_KEY}
  supabase:
    bucket: ${SUPABASE_BUCKET}
    id: ${SUPABASE_ID}
    url: ${SUPABASE_URL}
    service-role:
      key: ${SUPABASE_SERVICE_KEY}
    jwt:
      secret: ${SUPABASE_JWT_SECRET}
    stripe:
      secret-key: ${STRIPE_SECRET_KEY}
      client-id: ${CLIENT_ID}
      webhook-secret: ${WEBHOOK_SECRET}
      prices:
        starter-monthly: price_1RejmbCRihhzEjrx1c5e4k1b
        starter-yearly: price_1RejpfCRihhzEjrxnhjYzbHg
        pro-monthly: price_1Rejr6CRihhzEjrxEPlprYeQ
        pro-yearly: price_1Reju2CRihhzEjrxoYzod6BX

frontend:
  url: ${FRONTEND_URL}
  paths:
    groups: /groups

server:
  port: ${PORT:8082}